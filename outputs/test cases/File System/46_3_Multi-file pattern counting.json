{
    "feature_id": 46,
    "test_case_id": 3,
    "test_case_name": "Multi-file pattern counting",
    "feature_description": "Calculate total lines containing specific words/patterns across multiple files",
    "env_setup": "# Clean the test directory\nrm -rf ~/Desktop/oi/*\n\n# Create logs directory and test files\ncd ~/Desktop/oi\nmkdir -p logs\n\ncat > logs/app_log_day1.txt << 'EOL'\n[08:15:23] INFO: Application started\n[09:22:45] ERROR: Database connection failed - timeout\n[10:30:11] INFO: User profile updated\n[11:45:32] ERROR: Database connection failed - authentication error\n[14:20:05] WARN: High memory usage detected\n[16:55:40] ERROR: Database connection failed - timeout\nEOL\n\ncat > logs/app_log_day2.txt << 'EOL'\n[07:30:10] INFO: Application started\n[08:45:22] INFO: Scheduled maintenance completed\n[11:20:18] ERROR: API request limit exceeded\n[13:15:44] ERROR: Database connection failed - timeout\n[15:50:30] INFO: New user registered\nEOL\n\ncat > logs/app_log_day3.txt << 'EOL'\n[08:05:12] INFO: Application started\n[10:30:45] WARN: Slow query performance detected\n[12:40:33] ERROR: Database connection failed - invalid credentials\n[14:22:19] ERROR: Database connection failed - timeout\n[16:15:07] INFO: Backup completed successfully\n[18:30:55] ERROR: Database connection failed - server not responding\nEOL",
    "prompt": "Count how many times database connection failures appear across all the log files in the logs directory.",
    "expected_behaviour": "The agent should analyze all three log files and report that there are 7 database connection failures in total:\n- 3 instances in app_log_day1.txt\n- 1 instance in app_log_day2.txt\n- 3 instances in app_log_day3.txt\n\nThe agent should explain that it identified lines containing \"database connection failed\" regardless of the specific error type (timeout, authentication error, etc.).",
    "env_probing_required": "yes"
}